# -*- coding: utf-8 -*-
"""Level 2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-jAKkeZDC59KreMe93Q_HV1lQvCD4VXb

Level 2: Operational Features & Feature Engineering

Task 1: Percentage of Restaurants Offering Table Booking & Online Delivery
"""

# Percentage of Restaurants offering Table Booking
table_booking_pct = df['Has Table booking'].value_counts(normalize=True) * 100
print("Table Booking Percentage:\n", table_booking_pct)

table_booking_pct.to_excel('Table_Booking_Percentage.xlsx')

# Percentage of Restaurants offering Online Delivery
online_delivery_pct = df['Has Online delivery'].value_counts(normalize=True) * 100
print("Online Delivery Percentage:\n", online_delivery_pct)

online_delivery_pct.to_excel('Online_Delivery_Percentage.xlsx')

"""Compare Ratings: With vs Without Table Booking"""

# Group by table booking
table_rating = df.groupby('Has Table booking')['Aggregate rating'].mean()
print("Rating Comparison:\n", table_rating)

table_rating.to_excel('table_rating.xlsx')

# Bar plot
plt.figure(figsize=(6,4))
sns.barplot(x=table_rating.index, y=table_rating.values)
plt.xticks([0, 1], ['No Table Booking', 'Table Booking'])
plt.ylabel('Average Rating')
plt.title('Average Rating by Table Booking Availability')
plt.savefig('Average_Rating_by_Table_Booking.png')
plt.show()

# Compare ratings
delivery_rating = df.groupby('Has Online delivery')['Aggregate rating'].mean()
print("Rating Comparison:\n", delivery_rating)

delivery_rating.to_excel('Rating_Comparison.xlsx')

# Bar plot
plt.figure(figsize=(6,4))
sns.barplot(x=delivery_rating.index, y=delivery_rating.values)
plt.xticks([0, 1], ['No Delivery', 'Delivery'])
plt.ylabel('Average Rating')
plt.title('Average Rating by Delivery Availability')
plt.savefig('Average_Rating_by_Delivery.png')
plt.show()

"""Online Delivery Availability by Price Range"""

# Map 'Yes'/'No' to 1/0 without creating a new column
df['Delivery'] = df['Has Online delivery'].str.strip().str.lower().map({'yes': 1, 'no': 0})

# Group by 'Price range' and calculate the mean
delivery_by_price = df.groupby('Price range')['Delivery'].mean()

# Display the result
print("Delivery Availability by Price Range:\n", delivery_by_price)

# Save to Excel
delivery_by_price.to_excel('Delivery_Availability_by_Price_Range.xlsx')

# Bar plot
plt.figure(figsize=(8,5))
sns.barplot(x=delivery_by_price.index, y=delivery_by_price.values)
plt.xlabel('Price Range')
plt.ylabel('Percentage Offering Online Delivery')
plt.title('Online Delivery Availability by Price Range')
plt.savefig('Online_Delivery_Availability_by_Price_Range.png')
plt.show()

"""Task 2: Price Range Analysis

Most Common Price Range
"""

# Count frequency of each price range
price_counts = df['Price range'].value_counts().sort_index()
most_common_price = price_counts.idxmax()
print(f"Most Common Price Range: {most_common_price}")

"""Average Rating per Price Range"""

# Group by price range
avg_rating_by_price = df.groupby('Price range')['Aggregate rating'].mean().sort_values(ascending=False)
print("Average Rating by Price Range:\n", avg_rating_by_price)

# Save to Excel
avg_rating_by_price.to_excel('Average_Rating_by_Price_Range.xlsx')

"""Identify Rating Color with Highest Average Rating"""

# Rating color with highest avg rating
color_rating = df.groupby('Rating color')['Aggregate rating'].mean().sort_values(ascending=False)
print("Rating Color with Highest Average Rating:\n", color_rating)

# Save to Excel
color_rating.to_excel('Rating_Color_with_Highest_Average_Rating.xlsx')

color_avg_rating = df.groupby('Rating color')['Aggregate rating'].mean().reset_index()
top_color = color_avg_rating.loc[color_avg_rating['Aggregate rating'].idxmax(), 'Rating color']
print(f"Rating Color with Highest Average Rating: {top_color}")

"""Visualize Ratings by Price Range"""

plt.figure(figsize=(8,5))
sns.barplot(x=avg_rating_by_price.index, y=avg_rating_by_price.values, hue=avg_rating_by_price.index, palette='coolwarm')
plt.xlabel('Price Range')
plt.ylabel('Average Rating')
plt.title('Average Rating by Price Range')
plt.savefig('Average_Rating_by_Price_Range.png')
plt.show()

"""Task 3: Feature Engineering

Extract Additional Features
"""

# Length of restaurant Name and Address
df['Name Length'] = df['Restaurant Name'].apply(lambda x: len(str(x)))
df['Address Length'] = df['Address'].apply(lambda x: len(str(x)))

# preview
print(df[['Restaurant Name', 'Name Length', 'Address', 'Address Length']].head())

"""Encode Categorical Flags"""

# Encode 'Has Table booking' and 'Has Online delivery'
# Strip whitespace and lowercase for consistency
df['Table Booking Flag'] = df['Has Table booking'].str.strip().str.lower().map({'yes': 1, 'no': 0})
df['Delivery Flag'] = df['Has Online delivery'].str.strip().str.lower().map({'yes': 1, 'no': 0})
df['Rating category'] = df['Rating color'].astype('category').cat.codes
df['Cuisines category'] = df['Cuisines'].astype('category').cat.codes

# Preview
print(df[['Has Table booking', 'Table Booking Flag', 'Has Online delivery', 'Delivery Flag']].head())

# Preview
print(df[['Rating color','Rating category', 'Cuisines', 'Cuisines category']].head())

"""Visualize Feature Distributions"""

# Rating category distribution
plt.figure(figsize=(8,5))
sns.histplot(df['Rating category'], bins=30, kde=True, color='teal')
plt.title('Distribution of Restaurant Rating color')
plt.xlabel('Name Length')
plt.ylabel('Count')
plt.savefig('Rating_Category_Distribution.png')
plt.show()

# Cuisines category distribution
plt.figure(figsize=(8,5))
sns.histplot(df['Cuisines category'], bins=30, kde=True, color='teal')
plt.title('Distribution of Restaurant Cuisines')
plt.xlabel('Name Length')
plt.ylabel('Count')
plt.savefig('Cuisines_Category_Distribution.png')
plt.show()

# Table booking vs online delivery
plt.figure(figsize=(6,4))
sns.countplot(x='Table Booking Flag', hue='Has Table booking', data=df, palette='Set1')
plt.title('Table Booking Availability')
plt.ylabel('Number of Restaurants')
plt.savefig('Table_Booking_Availability.png')
plt.show()

plt.figure(figsize=(6,4))
sns.countplot(x='Delivery Flag', hue='Has Online delivery', data=df, palette='Set2')
plt.title('Online Delivery Availability')
plt.ylabel('Number of Restaurants')
plt.savefig('Online_Delivery_Availability.png')
plt.show()